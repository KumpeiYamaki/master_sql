### 1章 - CASE式
- 想定外の動きを防ぐため、ELSE句は書くように。
- 「WHERE句で条件分岐させるのは素人のやること。プロはSELECT句で分岐させる」
- CASE内で集約関数を使用できる！
- 「HAVING句で条件分岐させるのは素人のやること。プロはSELECT句で分岐させる」
- 「CASE文」ではなく**「CASE式」**であり、列名や定数を書く場所には常に書くことができる。

### 2章 - WINDOW関数
- ウィンドウ関数の名前付きプロシージャ

### 3章 - 自己結合
- 非等値結合を利用した組み合わせ・順列の作成
- rowid(Oracle), oid(PostgreSQL)

### 4章 - 3値論理とNULL
- SQLにおけるBOOL型にはunknownという第三の値がある
- unknown絡みの論理演算では、「unknownがTrue・Falseの両方を取り得る」として考えれば分かる。
- 論理演算の結果がunknownだった場合、結果としてはNULLを返す。
- 上記理由より、比較やIN、EXISTS、ALL等を使うときには注意が必要。
- 文字列の結合にNULLが使われた場合は基本的にはNULLを返す。(OracleのみNULLは空文字列として扱われる)
- 4つ目の値(NA)が無くてよかった。。。

### 5章
- 「述語」とは、「戻り値が真理値になる関数」のこと。
- EXISTSは行の集合を取り扱う一階関数(高階関数)
- coalesceを「NULLだった場合に置き換える」関数だと勘違いしていた。正しくは「最初に見つけたNULLじゃない値を返す」関数。

### 6章

### 7章

### 8章
