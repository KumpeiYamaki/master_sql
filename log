## 学び、印象に残った言葉など

## 魔法のSQL

### 1章 - CASE式
- 想定外の動きを防ぐため、ELSE句は書くように。
- 「WHERE句で条件分岐させるのは素人のやること。プロはSELECT句で分岐させる」
- CASE内で集約関数を使用できる！
- 「HAVING句で条件分岐させるのは素人のやること。プロはSELECT句で分岐させる」
- 「CASE文」ではなく**「CASE式」**であり、列名や定数を書く場所には常に書くことができる。

### 2章 - WINDOW関数
- ウィンドウ関数の名前付きプロシージャ

### 3章 - 自己結合
- 非等値結合を利用した組み合わせ・順列の作成
- rowid(Oracle), oid(PostgreSQL)

### 4章 - 3値論理とNULL
- SQLにおけるBOOL型にはunknownという第三の値がある
- unknown絡みの論理演算では、「unknownがTrue・Falseの両方を取り得る」として考えれば分かる。
- 論理演算の結果がunknownだった場合、結果としてはNULLを返す。
- 上記理由より、比較やIN、EXISTS、ALL等を使うときには注意が必要。
- 文字列の結合にNULLが使われた場合は基本的にはNULLを返す。(OracleのみNULLは空文字列として扱われる)
- 4つ目の値(NA)が無くてよかった。。。

### 5章 - EXISTS述語の使い方
- 「述語」とは、「戻り値が真理値になる関数」のこと。
- EXISTSは行の集合を取り扱う一階関数(高階関数)
- coalesceを「NULLだった場合に置き換える」関数だと勘違いしていた。正しくは「最初に見つけたNULLじゃない値を返す」関数。

### 6章 - HAVING句の力
- 「ORDER BYは、結果を表示する目的には便利だが、それ自体はリレーショナル演算子ではない。」
- HAVINGはGROUP BY無しでも使える！！(省略されていると見做されるだけなので、元の列の値は使えなくなる)
- 「まとめ」に集合の性質を調べるための条件一覧がある。便利な調べ方が載っている。

### 7章 - ウィンドウ関数

### 8章 - 外部結合
- スカラサブクエリはパフォーマンスが良くない
- 外部結合を使ってマスタを2つouter joinする場合、無いデータに関する行が消えてしまう可能性がある。そういう時はマスタ同士をcross joinしてからouter joinする。
- SQLは基本的にフォーマット整形には向かない。必要な時は外部結合やCASE式で乗り切る。

### 9章 - 集合演算

### 10章 - 数列を扱う

### 11章 - SQLを速くしよう
- ソートをうまく避ける
- 裏でソートが走る演算: GROUP BY, ORDER BY, 集約関数(SUM, AVG, MAXなど), DISTINCT, 集合演算子(UNION, EXCEPTなど), ウィンドウ関数(RANK, ROW_NUMBERなど)
- インデックスをうまく活用する
- where句で書ける条件はHAVING句には書かない(先に絞り込む)
- インデックスを使用する時は、列は裸！
- 否定形, 複数索引に対するORではインデックスは使えない
- LIKEでは、前方一致検索のみインデックスが使用可能
- 中間テーブルはできるだけ減らす
- 集約結果に対する条件で中間テーブルを使用しない。HAVINGを使う。
- 集約より先に結合する

### 12章 - SQL作法
- KISS = "Keep It Short & Simple"
- 「未来の自分は他人と思え」
- 相関サブクエリは使わない
- 複雑なコードを書く時は、FROM以下から考えるとわかりやすい

## RDBの世界

### 13章 - RDB近現代史
- コッド「ループをなくすのがRDBを考えた主目的だった」

### 14章 - なぜ"関係"モデル？
- "関係"に比べて、"表"は定義が緩やかで曖昧度の高い概念
- "関係"は各属性の直積の部分集合

### 15章 - "関係"に始まり"関係"に終わる
- 関係モデルにおける関係は関係演算子について閉じた集合を形成する(閉包性)
- SELECT文は、テーブル(関係)を引数にとってテーブル(関係)を返す関数

### 16章 - アドレス、この巨大な怪物

### 17章 - 順序をめぐる冒険
- OLTP(OnLine Transaction Processing)とOLAP(OnLine Analytical Processing)
- WINDOW関数の導入は、RDBが排除したはずの概念の再導入という側面があったため、保守派と革新派でせめぎあいがあった。

### 18章 - GROUP BYとPARTITION BY
- 部分集合の一つ一つを「類」と呼ぶ(数学)

### 19章 - 手続き型から集合指向へ頭を切り替える
- 「手続き型」: 代入・分岐・ループを基本処理単位として、システム全体を分割する発想
- 手続き型言語やファイルシステムは、「複雑なものを単純なものの組み合わせとみなす還元論的な考え方」
- SQLやRDBは、どちらかというと「全体論的な考え方」
- 「箱と矢印」でなく、「円」でイメージする

### 20章 - 神のいない論理
- 「神様ならすべての命題の真偽を知っているはず」なので、神の威信が強かった時代には２値原理が否定されなかった(古典論理)。
- 3値論理は人間の認識や知識の表現に適した論理。

### 21章 - SQLと再帰集合

### 22章 - NULL撲滅委員会
- まずデフォルト値を入れられないか検討する。
- どうしようもない場合のみNULLを許可する。

### 23章 - SQLにおける存在の階層



























